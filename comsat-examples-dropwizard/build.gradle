configurations {
    quasar
}

dependencies {
    compile "co.paralleluniverse:comsat-dropwizard:$comsatVersion"
    runtime 'org.apache.derby:derby:10.10.1.1'    
    compile 'io.dropwizard:dropwizard-assets:0.7.1'
    compile  "co.paralleluniverse:quasar-core:$quasarVersion"
    quasar  "co.paralleluniverse:quasar-core:$quasarVersion"
    compile(group: 'com.wordnik', name: 'swagger-jaxrs_2.10', version:'1.3.5') {
        exclude(module: 'jackson-jaxrs-json-provider')
        exclude(module: 'commons-lang')
        exclude(module: 'slf4j-api')
        exclude(module: 'paranamer')
        exclude(module: 'jackson-databind')
        exclude(module: 'javassist')
        exclude(module: 'joda-time')
        exclude(module: 'jackson-core')
        exclude(module: 'jackson-annotations')
        exclude(module: 'jsr311-api')
    }
}

tasks.withType(JavaExec) {
    main = mainClass
    jvmArgs "-javaagent:${configurations.quasar.iterator().next()}" // =v, =d
    jvmArgs '-server'
    jvmArgs '-Xmx1024m'
    //    jvmArgs "-ea"
    classpath = sourceSets.main.runtimeClasspath 
    args "server", "hello-world.yml"
    systemProperty 'co.paralleluniverse.fibers.verifyInstrumentation', 'true'
}

task(runSimple, dependsOn: 'classes', type: JavaExec) {
    main = 'com.example.helloworld.HelloWorldApplication'
    // args "server", "hello-world.yml"
}

mainClassName = "com.example.helloworld.HelloWorldApplication"
// inject javaagent into the distribution
applicationDefaultJvmArgs = [
        "-javaagent:\$APP_HOME/lib/quasar-core-${quasarVersion}.jar", "-server",
        '-Dco.paralleluniverse.fibers.verifyInstrumentation=true'
]


// $ symbol gets escaped in script anyway:( so we need to replace it.
startScripts {
    doLast {
        unixScript.text = unixScript.text.replace('\\$APP_HOME', '\$APP_HOME')
        // do something like this for Windows scripts also
    }
}

applicationDistribution.from('.') {
    include 'hello-world.yml'
    into "conf"
}

applicationDistribution.from('src/main/bin') {
    include '*'
    into "bin"
    fileMode 0755
}

applicationDistribution.from('.') {
    include 'readme.txt'
    into "."
}

defaultTasks 'runSimple'

